Drawson {
  Start
    = StatementList

  StatementList 
    = Statement*
      
  Statement 
    = WhileLoop
    | ForLoop
    | ClearStatement
    | SetStatement
    | DrawStatement
    | FillStatement
    | DefinitionStatement
    | AssignmentStatement
    | DefinitionWithAssignmentStatement
    | Comment

  WhileLoop 
    = "while" leftParentheses ConditionalStatement rightParentheses LoopBody

  ForLoop 
    = "for" identifier "in" ArithmeticStatement ArithmeticStatement LoopBody

  LoopBody 
    = leftCurlyBrace StatementList rightCurlyBrace

  DefinitionStatement 
    = "val" identifier terminator

  AssignmentStatement
    = identifier "=" ArithmeticStatement terminator

  DefinitionWithAssignmentStatement
    = "val" AssignmentStatement

  ClearStatement 
    = "clear" terminator

  SetStatement 
    = "set" SetDefinition terminator

  SetDefinition 
    = "color" colorValue
    | "paint" colorValue
    | "thickness" ArithmeticStatement
      
  DrawStatement
    = "draw" ObjectDefinition terminator

  FillStatement
    = "fill" FillableObjectDefinition terminator

  ObjectDefinition
    = FillableObjectDefinition
    | "line" ArithmeticStatement ArithmeticStatement ArithmeticStatement ArithmeticStatement -- line_definition

  FillableObjectDefinition
    = "circle" ArithmeticStatement ArithmeticStatement ArithmeticStatement -- circle_definition
    | "rect" ArithmeticStatement ArithmeticStatement ArithmeticStatement ArithmeticStatement -- rect_definition
  
  ConditionalStatement 
    = not ConditionalStatement -- negation
    | ConditionalStatement logicalOperator ConditionalStatement -- operator_join
    | leftParentheses ConditionalStatement rightParentheses -- contidion_parentheses
    | ArithmeticStatement relationalOperator ArithmeticStatement -- arithmetic_condition

  ArithmeticStatement 
    = integer
    | identifier
    | leftParentheses ArithmeticStatement rightParentheses -- arithmetic_parentheses
    | leftParentheses minus ArithmeticStatement rightParentheses -- minus_arithmetic_parentheses
    | ArithmeticStatement arithmeticOperator ArithmeticStatement -- arithmetic_operation

  arithmeticOperator 
    = "+"
    | minus
    | "*"
    | "/"

  logicalOperator 
    = "&&"
    | "||"

  relationalOperator 
    = "=="
    | "!="
    | ">"
    | "<"
    | ">="
    | "<="

  identifier 
    = lower alnum*

  colorValue 
    = "#" alnum alnum alnum alnum alnum alnum

  minus
    = "-"

  Comment
    = "/*" notEndOfComment* "*/"

  notEndOfComment
    = ~"*/" any
  
  leftCurlyBrace 
    = "{"

  rightCurlyBrace 
    = "}"

  leftParentheses 
    = "("

  rightParentheses 
    = ")"

  integer 
    = "1".."9" digit* -- number
    | "0" -- zero

  not 
    = "!"

  terminator
    = ";"
}